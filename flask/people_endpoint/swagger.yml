openapi: "3.0.0"
info:
  version: "1.0"
  title: Swagger Rest Article
  license:
    name: MIT
servers:
  - url: http://localhost:5000/v1.0/api
paths:
  /people:
    get:
      summary: List all pets
      operationId: people.read_all
      tags:
        - people
      parameters:
        - name: length
          in: query
          description: Number of people to get from people
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Offset from beginning of list where to start gathering people
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content: {}
        default:
          description: unexpected error
          content: {}
    post:
      operationId: people.create
      tags:
        - People
      summary: Create a person and add it to the people list
      description: Create a new person in the people list
      parameters:
        - name: person
          in: body
          description: Person to create
          required: True
          content:
            application/json:
              schema:
                type: object
                properties:
                  fname:
                    type: string
                    description: First name of person to create
                  lname:
                    type: string
                    description: Last name of person to create
      responses:
        201:
          description: Successfully created person in list
          

  /people/{lname}:
    get:
      operationId: people.read_one
      tags:
        - People
      summary: Read one person from the people list
      #description: Read one person from the people list
      parameters:
        - name: lname
          in: path
          required: True
          description: Last name of the person to get from the list
          schema:
            type: string
      responses:
        200:
          description: Successfully read person from people list operation
          content: 
            application/json:
              schema:
                properties:
                  fname:
                    type: string
                  lname:
                    type: string
                  timestamp:
                    type: string

components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
apiVersion: v1
kind: Deployment
metadata:
	name: {{ include "bookstore.fullname" . }}
	labels:
		{{- include "bookstore.labels" . | nindent 4 }}
	creationTimestamp: null
spec:
	progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
	replicas: {{ .Values.replicaCount }}
	selector:
		matchLabels:
			{{- include "bookstore.selectorLabels" . | nindent 6 }}
	template:
		metadata:
			labels:
				{{- include "bookstore.selectorLabels" . | nindent 8 }}
		spec:
			containers:
				- name: {{ .Chart.name }}
					securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
					image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
					ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
				{{- if .Values.livenessProbe }}
					livenessProbe:
					httpGet:
						path: /api/health
						port: {{ .Values.service.internalPort }}
				{{- end }}
				{{- if .Values.readinessProbe }}
					readinessProbe:
					httpGet:
						path: /api/health
						port: {{ .Values.service.internalPort }}
				{{- end }}
					resources:
            {{- toYaml .Values.resources | nindent 12 }}
				
					
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    name: flask-api
  name: flask-api
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: flask-api
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: flask-api
    spec:
      containers:
      - env: # Changed to statefulset
        - name: FLASK_ENV
          value: development
        - name: MONGO_HOST
          value: mongo
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_DB
          value: mongo
        image: sondreweb/flask-backend:test.v1
        imagePullPolicy: Always
        ports:
          - containerPort: 5000
        name: flask-api
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30